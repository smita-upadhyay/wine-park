pipeline {
  agent any
  environment {
    GITHUB_TOKEN=credentials('github-token')
    IMAGE_NAME='kamleshw11/wine-park'
    IMAGE_VERSION='v0.1'
    COSIGN_PASSWORD=credentials('cosign-password')
    COSIGN_PRIVATE_KEY = credentials('cosign-private-key')
  }
  stages {
      
    stage('Checkout Code') {
        steps {
            checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'github-token', url: 'https://github.com/WinePark/wine-park.git']])
        }
    }
    stage('Build') {
        steps {
            sh 'mvn clean install -DskipTests'
        }
    }
    
    stage('build image') {
      steps {
        sh 'docker build -t $IMAGE_NAME:$IMAGE_VERSION .'
      }
    }
    stage('login to GHCR') {
      steps {
        sh 'echo "$GITHUB_TOKEN_PSW" | docker login ghcr.io -u $GITHUB_TOKEN_USR --password-stdin'
      }
    }
    stage('tag image') {
      steps {
        sh 'docker tag $IMAGE_NAME:$IMAGE_VERSION ghcr.io/$IMAGE_NAME:$IMAGE_VERSION'
      }
    }
    stage('push image') {
      steps {
        sh 'docker push ghcr.io/$IMAGE_NAME:$IMAGE_VERSION'
      }
    }
    stage('sign the container image') {
      steps {
        sh 'cosign version'
        sh 'cosign sign --key $COSIGN_PRIVATE_KEY ghcr.io/$IMAGE_NAME:$IMAGE_VERSION -y'
      }
    }
  }
//   post {
//     always {
//       sh 'docker logout'
//     }
//   }
}